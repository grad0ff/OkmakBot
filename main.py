import telebot, time
from telebot import types

bot = telebot.TeleBot("1825854132:AAFn3pRQ7yhRemHc5cSsG_e3MohAyC9lQyA")


class ShoppingList:
    COUNT = 0
    PRODUCTS = {'A', 'B', 'C', 'D', 'E', 'F'}

    def __init__(self):
        self.shoplist = set()
        self.not_added_list = ShoppingList.PRODUCTS
        ShoppingList.COUNT += 1

    def add_item(self, item):
        self.shoplist.add(item)
        self.not_added_list = ShoppingList.PRODUCTS.difference(self.shoplist)
        print('–í —Å–ø–∏—Å–∫–µ: ', self.shoplist)
        print('–ù–µ –≤ —Å–ø–∏—Å–∫–µ: ', self.not_added_list)

    def del_item(self):
        pass

    def purchased(self):
        pass


shopping_list = ShoppingList()


# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton('/–ö—É–ø–∏—Ç—å')
    button_2 = types.KeyboardButton('/–°–ø–∏—Å–æ–∫')
    markup.row(button_1, button_2)
    bot.send_message(message.chat.id, '–°–ª—É—à–∞—é –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ!', reply_markup=markup)


# –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
@bot.message_handler(commands=['–°–ø–∏—Å–æ–∫'])
def get_shopping_list(message):
    if shopping_list.shoplist:
        markup = types.InlineKeyboardMarkup()
        markup.row(*display_btns(shopping_list.shoplist))
        bot.send_message(message.chat.id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫:', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç! üòÅ')


# –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≤–Ω–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
# @bot.callback_query_handler(func=get_shopping_list)
# def handle(call):
#     shopping_list.add_item(call.data)
#     bot.send_message(call.message.chat.id, f'–£–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–ø–∏—Å–∫–∞:   {str(call.data)}')
#     to_buy(call.message)
#     bot.answer_callback_query(call.id)
#
#     bot.send_message(message.chat.id, shopping_list.get_list())


# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
@bot.message_handler(commands=['–ö—É–ø–∏—Ç—å'])
def to_buy(message):
    markup = types.InlineKeyboardMarkup()
    markup.row(*display_btns(shopping_list.not_added_list))
    button_new = types.InlineKeyboardButton('–ù–æ–≤–æ–µ', callback_data='c')
    markup.row(button_new)
    bot.send_message(message.chat.id, '–ß—Ç–æ –∂–µ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å? ü§î', reply_markup=markup)


# –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≤–Ω–µ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle(call):
    shopping_list.add_item(call.data)
    bot.send_message(call.message.chat.id, f'–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫:   {str(call.data)} üëç')
    bot.answer_callback_query(call.id)
    time.sleep(1)
    to_buy(call.message)


# –î–æ–ø. —Ñ—É–Ω–∫—Ü–∏—è. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–ø–∏—Å–∫–∞
def display_btns(list_type):
    btn_list = []
    for item in sorted(list_type):
        button_item = types.InlineKeyboardButton(item, callback_data=item)
        btn_list.append(button_item)
    return btn_list




bot.polling()
